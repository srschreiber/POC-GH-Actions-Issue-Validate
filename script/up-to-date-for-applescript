#!/bin/bash

# Expectations:
# - Repo up to date: Print nothing, exit 0
# - Repo not up to date: Print something, exit 0
# - Failure: Print an error message, exit != 0

set -e
set -o pipefail

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && cd .. && pwd )"

if [ -f "$DIR/applescript.debug" ]; then
  echo "---- Start $0 at $(date) ----" >> "$DIR/applescript.debug"
  # https://askubuntu.com/questions/811439/bash-set-x-logs-to-file/1001404#1001404
  exec   > >(tee -ia "$DIR/applescript.debug")
  exec  2> >(tee -ia "$DIR/applescript.debug" >& 2)
  exec 19>> "$DIR/applescript.debug"
  export BASH_XTRACEFD="19"
  set -x
fi

cd "$DIR"
git fetch --all >/dev/null 2>&1
LOCAL=$(git rev-parse HEAD)
REMOTE=$(git rev-parse "@{upstream}" 2>/dev/null || echo "none")
BASE=$(git merge-base HEAD "@{upstream}" 2>/dev/null || echo "none")

if [ "$LOCAL" == "$REMOTE" ]; then
  exit 0
elif [ "$REMOTE" == "$BASE" ]; then
  # Local repo contains changes. That's fine!
  exit 0
elif [ "$LOCAL" == "$BASE" ]; then
  echo "It looks like your local repo is out of date. Please run 'git pull' and then run 'make configure-viscosity' again!"
  exit 0
else
  echo "Somehow you've diverged from the origin master branch. Please fix this up and try again."
  exit 1
fi
